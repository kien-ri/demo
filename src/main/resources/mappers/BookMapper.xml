<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kien.book.repository.BookMapper">

    <select id="getById" parameterType="long" resultType="BookView">
        SELECT
            b.id AS id,
            b.title AS title,
            b.title_kana AS title_kana,
            b.author AS author,
            p.id AS publisher_id,
            p.name AS publisher_name,
            u.id AS user_id,
            u.name AS user_name,
            b.price AS price,
            b.is_deleted AS is_deleted,
            b.created_at AS created_at,
            b.updated_at AS updated_at
        FROM
            books b
        LEFT JOIN
            publisher p
        ON b.publisher_id = p.id
        AND p.is_deleted = FALSE
        LEFT JOIN
            `user` u
        ON b.user_id = u.id
        AND u.is_deleted = FALSE
        WHERE
            b.id = #{id}
        AND b.is_deleted = FALSE;
    </select>

    <select id="getCountByCondition" parameterType="BookCondition" resultType="int">
        SELECT
            count(*)
        FROM
            books b
        LEFT JOIN
            publisher p
        ON b.publisher_id = p.id
        AND p.is_deleted = FALSE
        LEFT JOIN
            `user` u
        ON b.user_id = u.id
        AND u.is_deleted = FALSE
        <where>
            b.is_deleted = FALSE
            <if test="title != null and title != ''">
                AND b.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="titleKana != null and titleKana != ''">
                AND b.titleKana LIKE CONCAT('%', #{titleKana}, '%')
            </if>
            <if test="author != null and author != ''">
                AND b.author LIKE CONCAT('%', #{author}, '%')
            </if>
            <if test="publisherId != null">
                AND b.publisher_id = #{publisherId}
            </if>
            <if test="userId != null">
                AND b.user_id = #{userId}
            </if>
            <if test="minPrice != null">
                AND b.price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND #{maxPrice} >= b.price
            </if>
        </where>
    </select>

    <select id="getListByCondition" parameterType="BookCondition" resultType="BookView">
        SELECT
            b.id AS id,
            b.title AS title,
            b.title_kana AS title_kana,
            b.author AS author,
            p.id AS publisher_id,
            p.name AS publisher_name,
            u.id AS user_id,
            u.name AS user_name,
            b.price AS price,
            b.is_deleted AS is_deleted,
            b.created_at AS created_at,
            b.updated_at AS updated_at
        FROM
            books b
        LEFT JOIN
            publisher p
        ON b.publisher_id = p.id
        AND p.is_deleted = FALSE
        LEFT JOIN
            `user` u
        ON b.user_id = u.id
        AND u.is_deleted = FALSE
        <where>
            b.is_deleted = FALSE
            <if test="title != null and title != ''">
                AND b.title LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="titleKana != null and titleKana != ''">
                AND b.titleKana LIKE CONCAT('%', #{titleKana}, '%')
            </if>
            <if test="author != null and author != ''">
                AND b.author LIKE CONCAT('%', #{author}, '%')
            </if>
            <if test="publisherId != null">
                AND b.publisher_id = #{publisherId}
            </if>
            <if test="userId != null">
                AND b.user_id = #{userId}
            </if>
            <if test="minPrice != null">
                AND b.price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND #{maxPrice} >= b.price
            </if>
        </where>
        <if test="pageSize != null and currentPage != null">
            <bind name="offset" value="(currentPage - 1) * pageSize"/>
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>

    <insert id="save" parameterType="BookCreate">
        INSERT INTO `books`(
            title,
            title_kana,
            author,
            publisher_id,
            user_id,
            price
        )
        VALUES (
            #{title},
            #{titleKana},
            #{author},
            #{publisherId},
            #{userId},
            #{price}
        )
    </insert>

    <update id="deleteLogically" parameterType="long">
        UPDATE
            `books`
        SET
            is_deleted = true
        WHERE
            id = #{id}
        AND is_deleted = false
    </update>

    <update id="deleteBatchLogically" parameterType="List">
        UPDATE
            `books`
        SET
            is_deleted = true
        WHERE
            id
        IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND is_deleted = false
    </update>

    <update id="update" parameterType="Book">
        UPDATE
            `books`
        SET
            title = #{title},
            title_kana = #{titleKana},
            author = #{author},
            publisher_id = #{publisherId},
            user_id = #{userId},
            price = #{price}
        WHERE
            id = #{id}
        AND is_deleted = false
    </update>

</mapper>
